name: Tests
on: [push, pull_request]

jobs:
  frontend:
    name: Frontend Tests
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      working-directory: ./hyperglass/ui
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        working-directory: ${{ env.working-directory }}
        run: yarn install

      - name: TypeScript
        run: ./.tests/pre-commit-frontend.sh --typescript

      - name: ESLint
        run: ./.tests/pre-commit-frontend.sh --eslint

      - name: Prettier
        run: ./.tests/pre-commit-frontend.sh --prettier
  backend:
    name: Backend Tests
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x]
        redis-version: [5, 6]
        poetry-version: [1.1.4]
        python-version: [3.6, 3.8]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: X4BNet/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start Redis
        uses: X4BNet/redis-github-action@1.1.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - name: Install Python Dependencies
        run: poetry install

      - name: Run Flake8
        run: poetry run flake8 hyperglass

      - name: Run hyperglass
        run: '.tests/ga-backend-app.sh'

  installer:
    name: Installer Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Run hyperglass
        run: "sudo bash ./install.sh"

  build_container:
    needs: [ frontend, backend, installer ]
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: hyperglass
    steps:
      - uses: actions/checkout@v2
      - run: |
          docker build . --build-arg arg_k8s_application_commit=${{ github.sha }} --build-arg arg_k8s_application_version=${{ github.ref }} --tag $IMAGE_NAME
      - name: Log into registry
        run: echo "${{ secrets.dockerhub_token }}" | docker login -u x4bnet --password-stdin

      - name: Push image
        shell: bash
        run: |
          IMAGE_ID=x4bnet/$IMAGE_NAME

          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          if [[ "$VERSION" == "latest" ]]; then
            docker tag $IMAGE_NAME $IMAGE_ID:git-${{ github.sha }}
            docker push $IMAGE_ID:git-${{ github.sha }}
          fi